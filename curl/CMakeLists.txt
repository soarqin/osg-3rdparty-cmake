PROJECT(curl C)

SET(TARGET_LIB curl)

FILE(GLOB_RECURSE CURL_SRCS ${CURL_SOURCE_DIR}/lib/*.c)
FILE(GLOB_RECURSE CURL_PRIVATE_HEADERS ${CURL_SOURCE_DIR}/include/*.c)
FILE(GLOB CURL_PUBLIC_HEADERS ${CURL_SOURCE_DIR}/include/curl/*.h)

# Dependent include files
INCLUDE_DIRECTORIES(${CURL_SOURCE_DIR}/include ${CURL_SOURCE_DIR}/lib ${MBEDTLS_SOURCE_DIR}/include)

ADD_DEFINITIONS(-DBUILDING_LIBCURL -DUSE_MBEDTLS)

IF(MSVC)
	SET(CMAKE_DEBUG_POSTFIX "d")
ENDIF(MSVC)

ADD_LIBRARY(${TARGET_LIB} SHARED ${CURL_SRCS} ${CURL_PRIVATE_HEADERS} ${CURL_PUBLIC_HEADERS})

IF(WIN32)
	TARGET_LINK_LIBRARIES(${TARGET_LIB} ws2_32 wldap32)
ELSE(WIN32)
	ADD_DEFINITIONS(-DHAVE_CONFIG_H)
ENDIF(WIN32)

TARGET_LINK_LIBRARIES(${TARGET_LIB} mbedtls)

# Runtime equals DLL-files
# Archive equals static libraries
# Library equals module libraries
IF(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL )
	install(TARGETS ${TARGET_LIB}
		RUNTIME DESTINATION ${EXECUTABLE_OUTPUT_PATH}
		LIBRARY DESTINATION ${LIBRARY_OUTPUT_PATH}
		ARCHIVE DESTINATION ${ARCHIVE_OUTPUT_PATH})
ENDIF()
IF(NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL )
	install(FILES ${CURL_PUBLIC_HEADERS} DESTINATION ${INCLUDE_OUTPUT_PATH}/curl)
ENDIF()

